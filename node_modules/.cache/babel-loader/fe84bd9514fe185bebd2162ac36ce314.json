{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = validate => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); // This is for Future if needed do not remove\n\n  /*useEffect(() => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n          const x = 0;\n      }\n  }, [errors]);*/\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n\n    if (Object.keys(errors).length === 0) {\n      setErrors(validate(values));\n    }\n\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const formError = event => {\n    setErrors(validate(values));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setErrors,\n    formError\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/useForm.js"],"names":["useState","useEffect","useForm","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleSubmit","event","preventDefault","Object","keys","length","handleChange","persist","target","name","value","formError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD,CAJ0B,CAM1B;;AACA;;;;;;AAMA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;;AACX,QAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,MAApB,KAA+B,CAAlC,EAAqC;AACjCR,MAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACH;;AACDK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAND;;AAQA,QAAMO,YAAY,GAAIL,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,OAAN;AACAZ,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACO,KAAK,CAACO,MAAN,CAAaC,IAAd,GAAqBR,KAAK,CAACO,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACH,GAHD;;AAKA,QAAMC,SAAS,GAAIV,KAAD,IAAW;AACzBJ,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACH,GAFD;;AAIA,SAAO;AACHY,IAAAA,YADG;AAEHN,IAAAA,YAFG;AAGHN,IAAAA,MAHG;AAIHE,IAAAA,MAJG;AAKHC,IAAAA,SALG;AAMHc,IAAAA;AANG,GAAP;AAQH,CAtCD;;AAwCA,eAAenB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validate) => {\n\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    // This is for Future if needed do not remove\n    /*useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            const x = 0;\n        }\n    }, [errors]);*/\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        if(Object.keys(errors).length === 0) {\n            setErrors(validate(values));\n        }\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    const formError = (event) => {\n        setErrors(validate(values));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        setErrors,\n        formError\n    }\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}