{"ast":null,"code":"import { Validators } from \"./library/Validator\";\nexport const userQuestions = (values, errors) => {\n  return {\n    email: {\n      value: values.email,\n      key: 'email',\n      label: 'What is your Username',\n      min: 5,\n      error: errors.email\n    },\n    password: {\n      value: values.password,\n      key: 'password',\n      label: 'What is your Password',\n      min: 5,\n      type: 'password',\n      error: errors.password\n    }\n  };\n};\n\nconst passwordValidator = password => password ? {\n  validator: Validators.password,\n  message: 'Please Add Correct Password'\n} : {\n  validator: Validators.required,\n  message: 'Please fillout the form'\n};\n/*export function loginValidate(values) {\n    return values.email && values.password ? true : false\n};*/\n\n\nexport default function validate(values) {\n  let errors = {};\n  const x = !/\\S+@\\S+\\.\\S+/.test(values.email);\n\n  if (!values.email) {\n    errors.email = 'Email address is required';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be 8 or more characters';\n  }\n\n  return errors;\n}\n;\nexport const loginValidate = values => {\n  // true means invalid, so our conditions got reversed\n  return {\n    email: Object.keys(values.email).length === 0 || !/\\S+@\\S+\\.\\S+/.test(values.email),\n    password: Object.keys(values.password).length === 0 || values.password.length < 8\n  };\n};","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/userQuestions.js"],"names":["Validators","userQuestions","values","errors","email","value","key","label","min","error","password","type","passwordValidator","validator","message","required","validate","x","test","length","loginValidate","Object","keys"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,qBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC7C,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEH,MAAM,CAACE,KADX;AAEHE,MAAAA,GAAG,EAAE,OAFF;AAGHC,MAAAA,KAAK,EAAE,uBAHJ;AAIHC,MAAAA,GAAG,EAAE,CAJF;AAKHC,MAAAA,KAAK,EAAEN,MAAM,CAACC;AALX,KADJ;AAQHM,IAAAA,QAAQ,EAAE;AACNL,MAAAA,KAAK,EAAEH,MAAM,CAACQ,QADR;AAENJ,MAAAA,GAAG,EAAE,UAFC;AAGNC,MAAAA,KAAK,EAAE,uBAHD;AAINC,MAAAA,GAAG,EAAE,CAJC;AAKNG,MAAAA,IAAI,EAAE,UALA;AAMNF,MAAAA,KAAK,EAAEN,MAAM,CAACO;AANR;AARP,GAAP;AAiBH,CAlBM;;AAoBP,MAAME,iBAAiB,GAAIF,QAAD,IAAcA,QAAQ,GAAG;AAC3CG,EAAAA,SAAS,EAAEb,UAAU,CAACU,QADqB;AAE3CI,EAAAA,OAAO,EAAE;AAFkC,CAAH,GAGxC;AACAD,EAAAA,SAAS,EAAEb,UAAU,CAACe,QADtB;AAEAD,EAAAA,OAAO,EAAE;AAFT,CAHR;AASA;;;;;AAIA,eAAe,SAASE,QAAT,CAAkBd,MAAlB,EAA0B;AACrC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMc,CAAC,GAAG,CAAC,eAAeC,IAAf,CAAoBhB,MAAM,CAACE,KAA3B,CAAX;;AACA,MAAI,CAACF,MAAM,CAACE,KAAZ,EAAmB;AACfD,IAAAA,MAAM,CAACC,KAAP,GAAe,2BAAf;AACH,GAFD,MAEO,IAAI,CAAC,eAAec,IAAf,CAAoBhB,MAAM,CAACE,KAA3B,CAAL,EAAwC;AAC3CD,IAAAA,MAAM,CAACC,KAAP,GAAe,0BAAf;AACH;;AACD,MAAI,CAACF,MAAM,CAACQ,QAAZ,EAAsB;AAClBP,IAAAA,MAAM,CAACO,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAEO,IAAIR,MAAM,CAACQ,QAAP,CAAgBS,MAAhB,GAAyB,CAA7B,EAAgC;AACnChB,IAAAA,MAAM,CAACO,QAAP,GAAkB,uCAAlB;AACH;;AACD,SAAOP,MAAP;AACH;AAAA;AAGD,OAAO,MAAMiB,aAAa,GAAIlB,MAAD,IAAY;AACrC;AACA,SAAO;AACHE,IAAAA,KAAK,EAAEiB,MAAM,CAACC,IAAP,CAAYpB,MAAM,CAACE,KAAnB,EAA0Be,MAA1B,KAAqC,CAArC,IAA0C,CAAC,eAAeD,IAAf,CAAoBhB,MAAM,CAACE,KAA3B,CAD/C;AAEHM,IAAAA,QAAQ,EAAEW,MAAM,CAACC,IAAP,CAAYpB,MAAM,CAACQ,QAAnB,EAA6BS,MAA7B,KAAwC,CAAxC,IAA6CjB,MAAM,CAACQ,QAAP,CAAgBS,MAAhB,GAAyB;AAF7E,GAAP;AAIH,CANM","sourcesContent":["import {Validators} from \"./library/Validator\";\n\nexport const userQuestions = (values, errors) => {\n    return {\n        email: {\n            value: values.email,\n            key: 'email',\n            label: 'What is your Username',\n            min: 5,\n            error: errors.email\n        },\n        password: {\n            value: values.password,\n            key: 'password',\n            label: 'What is your Password',\n            min: 5,\n            type: 'password',\n            error: errors.password\n        },\n    }\n};\n\nconst passwordValidator = (password) => password ? {\n        validator: Validators.password,\n        message: 'Please Add Correct Password'\n    } : {\n        validator: Validators.required,\n        message: 'Please fillout the form'\n    };\n\n\n/*export function loginValidate(values) {\n    return values.email && values.password ? true : false\n};*/\n\nexport default function validate(values) {\n    let errors = {};\n    const x = !/\\S+@\\S+\\.\\S+/.test(values.email);\n    if (!values.email) {\n        errors.email = 'Email address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n        errors.email = 'Email address is invalid';\n    }\n    if (!values.password) {\n        errors.password = 'Password is required';\n    } else if (values.password.length < 8) {\n        errors.password = 'Password must be 8 or more characters';\n    }\n    return errors;\n};\n\n\nexport const loginValidate = (values) => {\n    // true means invalid, so our conditions got reversed\n    return {\n        email: Object.keys(values.email).length === 0 || !/\\S+@\\S+\\.\\S+/.test(values.email),\n        password: Object.keys(values.password).length === 0 || values.password.length < 8\n    };\n}\n"]},"metadata":{},"sourceType":"module"}