{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport validate, { userQuestions, loginValidate } from \"./userQuestions\";\nimport useForm from \"./useForm\";\nimport FormError from \"./core/form-error\";\nimport Button from \"./core/Button\";\n\nconst App = () => {\n  const {\n    values,\n    errors,\n    setErrors,\n    handleChange,\n    handleSubmit,\n    handleBlur\n  } = useForm(callback, validate);\n\n  function callback() {\n    console.log('No Errors, call back happen');\n  }\n\n  const onSubmitForm = event => {\n    handleSubmit(event);\n\n    if (Object.keys(errors).length === 0) {\n      console.log(JSON.stringify(values));\n    }\n  };\n\n  const question = userQuestions(values);\n\n  const addError = data => setErrors(data);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormError, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"text\",\n    value: values.email || '',\n    onChange: handleChange,\n    onBlur: handleBlur('email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"text\",\n    value: values.password || '',\n    onChange: handleChange,\n    onBlur: handleBlur('password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/App.js"],"names":["React","Component","TextBox","validate","userQuestions","loginValidate","useForm","FormError","Button","App","values","errors","setErrors","handleChange","handleSubmit","handleBlur","callback","console","log","onSubmitForm","event","Object","keys","length","JSON","stringify","question","addError","data","email","password"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,IAAkBC,aAAlB,EAAiCC,aAAjC,QAAqD,iBAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACV,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA,YAA1C;AAAwDC,IAAAA;AAAxD,MAAsET,OAAO,CAACU,QAAD,EAAWb,QAAX,CAAnF;;AACA,WAASa,QAAT,GAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;;AACD,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BN,IAAAA,YAAY,CAACM,KAAD,CAAZ;;AACA,QAAGC,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBY,MAApB,KAA+B,CAAlC,EAAqC;AACjCN,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACC,SAAL,CAAef,MAAf,CAAZ;AACH;AACJ,GALD;;AAMA,QAAMgB,QAAQ,GAAGtB,aAAa,CAACM,MAAD,CAA9B;;AACA,QAAMiB,QAAQ,GAAIC,IAAD,IAAUhB,SAAS,CAACgB,IAAD,CAApC;;AAEJ,sBACI;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEH,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQa;AAAO,IAAA,IAAI,EAAE,OAAb;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,KAAK,EAAED,MAAM,CAACmB,KAAP,IAAgB,EAAzD;AAA6D,IAAA,QAAQ,EAAEhB,YAAvE;AAAqF,IAAA,MAAM,EAAEE,UAAU,CAAC,OAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARb,eASa;AAAO,IAAA,IAAI,EAAE,UAAb;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,KAAK,EAAEL,MAAM,CAACoB,QAAP,IAAmB,EAA/D;AAAmE,IAAA,QAAQ,EAAEjB,YAA7E;AAA2F,IAAA,MAAM,EAAEE,UAAU,CAAC,UAAD,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATb,eAWI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAgBH,CA9BD;;AAgCA,eAAeN,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport validate, {userQuestions, loginValidate} from \"./userQuestions\";\nimport useForm from \"./useForm\";\nimport FormError from \"./core/form-error\";\nimport Button from \"./core/Button\";\n\nconst App = () => {\n        const {values, errors, setErrors, handleChange, handleSubmit, handleBlur} = useForm(callback, validate);\n        function callback() {\n            console.log('No Errors, call back happen');\n        }\n        const onSubmitForm = (event) => {\n            handleSubmit(event);\n            if(Object.keys(errors).length === 0) {\n                console.log(JSON.stringify(values));\n            }\n        };\n        const question = userQuestions(values);\n        const addError = (data) => setErrors(data);\n\n    return (\n        <form onSubmit={handleSubmit} noValidate>\n            <FormError errors={errors}/>\n            {/*<TextBox\n                question={question.email}\n                onChange={handleChange}/>\n           <br/>\n            <TextBox question={question.password}\n                     onChange={handleChange}/>*/}\n                     <input name={\"email\"} type=\"text\" value={values.email || ''} onChange={handleChange} onBlur={handleBlur('email')}/>\n                     <input name={\"password\"} type=\"text\" value={values.password || ''} onChange={handleChange} onBlur={handleBlur('password')}/>\n\n            <Button/>\n        </form>\n\n        );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}