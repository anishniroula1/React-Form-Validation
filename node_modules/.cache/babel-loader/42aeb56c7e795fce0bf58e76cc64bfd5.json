{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/core/textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from \"../library/Validator\";\n\nconst TextBox = ({\n  question,\n  onChange,\n  formError\n}) => {\n  const [error, setError] = useState({\n    error: false,\n    message: ' '\n  });\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    onChange(value);\n  };\n\n  const sendTrueValue = () => {\n    if (!!error && error.message) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      }, error.message);\n    }\n  };\n\n  const handleBlur = event => {\n    const {\n      value\n    } = event.target;\n    const requiredValidators = !!question.required && [{\n      check: question.required.validator,\n      message: question.required.message\n    }];\n    setError(validateInput(requiredValidators, value));\n    formError(error);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, question.label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"app-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 32\n    }\n  }, question.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: question.key,\n    type: !question.type ? 'text' : question.type,\n    value: question.value,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), sendTrueValue());\n};\n\nTextBox.propTypes = {\n  value: PropTypes.string || PropTypes.number,\n  onChange: PropTypes.func.isRequired\n};\nTextBox.defaultProps = {\n  value: ''\n};\nexport default TextBox;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/core/textbox.js"],"names":["React","useState","PropTypes","validateInput","TextBox","question","onChange","formError","error","setError","message","handleChange","event","value","target","sendTrueValue","handleBlur","requiredValidators","required","check","validator","label","key","type","propTypes","string","number","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,KAAR;AAAeE,IAAAA,OAAO,EAAE;AAAxB,GAAD,CAAlC;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAACC,MAAAA;AAAD,QAAUD,KAAK,CAACE,MAAtB;AACAR,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACH,GAHD;;AAKA,QAAME,aAAa,GAAG,MAAM;AACxB,QAAI,CAAC,CAACP,KAAF,IAAWA,KAAK,CAACE,OAArB,EAA6B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,KAAK,CAACE,OAAb,CAAP;AACH;AACJ,GAJD;;AAMA,QAAMM,UAAU,GAAIJ,KAAD,IAAW;AAC1B,UAAM;AAACC,MAAAA;AAAD,QAAUD,KAAK,CAACE,MAAtB;AACA,UAAMG,kBAAkB,GAAG,CAAC,CAACZ,QAAQ,CAACa,QAAX,IAAuB,CAC9C;AAACC,MAAAA,KAAK,EAAEd,QAAQ,CAACa,QAAT,CAAkBE,SAA1B;AAAqCV,MAAAA,OAAO,EAAEL,QAAQ,CAACa,QAAT,CAAkBR;AAAhE,KAD8C,CAAlD;AAGAD,IAAAA,QAAQ,CAACN,aAAa,CAACc,kBAAD,EAAqBJ,KAArB,CAAd,CAAR;AACAN,IAAAA,SAAS,CAACC,KAAD,CAAT;AACH,GAPD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,CAACgB,KAAT,iBAAkB;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkChB,QAAQ,CAACgB,KAA3C,CADvB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AACI,IAAA,IAAI,EAAEhB,QAAQ,CAACiB,GADnB;AAEI,IAAA,IAAI,EAAE,CAACjB,QAAQ,CAACkB,IAAV,GAAiB,MAAjB,GAA0BlB,QAAQ,CAACkB,IAF7C;AAGI,IAAA,KAAK,EAAElB,QAAQ,CAACQ,KAHpB;AAII,IAAA,QAAQ,EAAEF,YAJd;AAKI,IAAA,MAAM,EAAEK,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,EAUKD,aAAa,EAVlB,CADJ;AAcH,CApCD;;AAsCAX,OAAO,CAACoB,SAAR,GAAoB;AAChBX,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MAAV,IAAoBvB,SAAS,CAACwB,MADrB;AAEhBpB,EAAAA,QAAQ,EAAEJ,SAAS,CAACyB,IAAV,CAAeC;AAFT,CAApB;AAKAxB,OAAO,CAACyB,YAAR,GAAuB;AACnBhB,EAAAA,KAAK,EAAE;AADY,CAAvB;AAIA,eAAeT,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {validateInput} from \"../library/Validator\";\n\nconst TextBox = ({question, onChange, formError}) => {\n    const [error, setError] = useState({error: false, message: ' '});\n    const handleChange = (event) => {\n        const {value} = event.target;\n        onChange(value);\n    };\n\n    const sendTrueValue = () => {\n        if (!!error && error.message){\n            return <span>{error.message}</span>\n        }\n    };\n\n    const handleBlur = (event) => {\n        const {value} = event.target;\n        const requiredValidators = !!question.required && [\n            {check: question.required.validator, message: question.required.message}\n        ];\n        setError(validateInput(requiredValidators, value));\n        formError(error);\n    };\n\n    return (\n        <div>\n            {question.label && <label htmlFor=\"app-input-field\">{question.label}</label>}\n            <br/>\n            <input\n                name={question.key}\n                type={!question.type ? 'text' : question.type}\n                value={question.value}\n                onChange={handleChange}\n                onBlur={handleBlur}\n            /><br/>\n            {sendTrueValue()}\n        </div>\n    )\n};\n\nTextBox.propTypes = {\n    value: PropTypes.string || PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n};\n\nTextBox.defaultProps = {\n    value: '',\n};\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}