{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = (callBack, validate) => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [touched, setTouched] = useState({\n    touch: {}\n  }); // This is for Future if needed do not remove\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callBack();\n    }\n  }, [errors]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleBlur = event => () => {\n    setTouched(values => ({\n      touch: { ...values,\n        [event]: true\n      }\n    }));\n  }; // const hasErrors = validate(values);\n\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setErrors,\n    handleBlur\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/useForm.js"],"names":["useState","useEffect","useForm","callBack","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","touched","setTouched","touch","Object","keys","length","handleSubmit","event","preventDefault","handleChange","persist","target","name","value","handleBlur"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAACa,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAtC,CALoC,CAOpC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,MAApB,KAA+B,CAA/B,IAAoCP,YAAxC,EAAsD;AAClDN,MAAAA,QAAQ;AACX;AACJ,GAJQ,EAIN,CAACI,MAAD,CAJM,CAAT;;AAMA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXX,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAJD;;AAMA,QAAMU,YAAY,GAAIF,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACG,OAAN;AACAf,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACa,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAIP,KAAD,IAAW,MAAM;AAChCN,IAAAA,UAAU,CAACP,MAAM,KAAK;AAACQ,MAAAA,KAAK,EAAE,EAAC,GAAGR,MAAJ;AAAY,SAACa,KAAD,GAAS;AAArB;AAAR,KAAL,CAAP,CAAV;AACP,GAFG,CAzBoC,CA6BpC;;;AAEA,SAAO;AACHE,IAAAA,YADG;AAEHH,IAAAA,YAFG;AAGHZ,IAAAA,MAHG;AAIHE,IAAAA,MAJG;AAKHC,IAAAA,SALG;AAMHiB,IAAAA;AANG,GAAP;AAQH,CAvCD;;AAyCA,eAAevB,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (callBack, validate) => {\n\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [touched, setTouched] = useState({touch: {}});\n\n    // This is for Future if needed do not remove\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callBack();\n        }\n    }, [errors]);\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    const handleBlur = (event) => () => {\n        setTouched(values => ({touch: {...values, [event]: true} }));\n};\n\n    // const hasErrors = validate(values);\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        setErrors,\n        handleBlur\n    }\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}