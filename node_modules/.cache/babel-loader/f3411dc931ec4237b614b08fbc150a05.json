{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.send = undefined;\nexports.extractState = extractState;\nexports.generateId = generateId;\nexports.start = start;\nexports.connect = connect;\nexports.connectViaExtension = connectViaExtension;\n\nvar _jsan = require('jsan');\n\nvar _socketclusterClient = require('socketcluster-client');\n\nvar _socketclusterClient2 = _interopRequireDefault(_socketclusterClient);\n\nvar _rnHostDetect = require('rn-host-detect');\n\nvar _rnHostDetect2 = _interopRequireDefault(_rnHostDetect);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar socket = undefined;\nvar channel = undefined;\nvar listeners = {};\n\nfunction extractState(message) {\n  if (!message || !message.state) return undefined;\n  if (typeof message.state === 'string') return (0, _jsan.parse)(message.state);\n  return message.state;\n}\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2);\n}\n\nfunction handleMessages(message) {\n  if (!message.payload) message.payload = message.action;\n  Object.keys(listeners).forEach(function (id) {\n    if (message.instanceId && id !== message.instanceId) return;\n    if (typeof listeners[id] === 'function') listeners[id](message);else listeners[id].forEach(function (fn) {\n      fn(message);\n    });\n  });\n}\n\nfunction watch() {\n  if (channel) return;\n  socket.emit('login', 'master', function (err, channelName) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    channel = socket.subscribe(channelName);\n    channel.watch(handleMessages);\n    socket.on(channelName, handleMessages);\n  });\n}\n\nfunction connectToServer(options) {\n  if (socket) return;\n  var socketOptions = undefined;\n\n  if (options.port) {\n    socketOptions = {\n      port: options.port,\n      hostname: (0, _rnHostDetect2.default)(options.hostname || 'localhost'),\n      secure: !!options.secure\n    };\n  } else socketOptions = _constants.defaultSocketOptions;\n\n  socket = _socketclusterClient2.default.create(socketOptions);\n  watch();\n}\n\nfunction start(options) {\n  if (options) {\n    if (options.port && !options.hostname) {\n      options.hostname = 'localhost';\n    }\n  }\n\n  connectToServer(options);\n}\n\nfunction transformAction(action, config) {\n  if (action.action) return action;\n  var liftedAction = {\n    timestamp: Date.now()\n  };\n\n  if (action) {\n    if (config.getActionType) liftedAction.action = config.getActionType(action);else {\n      if (typeof action === 'string') liftedAction.action = {\n        type: action\n      };else if (!action.type) liftedAction.action = {\n        type: 'update'\n      };else liftedAction.action = action;\n    }\n  } else {\n    liftedAction.action = {\n      type: action\n    };\n  }\n\n  return liftedAction;\n}\n\nfunction _send(action, state, options, type, instanceId) {\n  start(options);\n  setTimeout(function () {\n    var message = {\n      payload: state ? (0, _jsan.stringify)(state) : '',\n      action: type === 'ACTION' ? (0, _jsan.stringify)(transformAction(action, options)) : action,\n      type: type || 'ACTION',\n      id: socket.id,\n      instanceId: instanceId,\n      name: options.name\n    };\n    socket.emit(socket.id ? 'log' : 'log-noid', message);\n  }, 0);\n}\n\nexports.send = _send;\n\nfunction connect() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var id = generateId(options.instanceId);\n  start(options);\n  return {\n    init: function init(state, action) {\n      _send(action || {}, state, options, 'INIT', id);\n    },\n    subscribe: function subscribe(listener) {\n      if (!listener) return undefined;\n      if (!listeners[id]) listeners[id] = [];\n      listeners[id].push(listener);\n      return function unsubscribe() {\n        var index = listeners[id].indexOf(listener);\n        listeners[id].splice(index, 1);\n      };\n    },\n    unsubscribe: function unsubscribe() {\n      delete listeners[id];\n    },\n    send: function send(action, payload) {\n      if (action) {\n        _send(action, payload, options, 'ACTION', id);\n      } else {\n        _send(undefined, payload, options, 'STATE', id);\n      }\n    },\n    error: function error(payload) {\n      socket.emit({\n        type: 'ERROR',\n        payload: payload,\n        id: socket.id,\n        instanceId: id\n      });\n    }\n  };\n}\n\nfunction connectViaExtension(options) {\n  if (options && options.remote || typeof window === 'undefined' || !window.__REDUX_DEVTOOLS_EXTENSION__) {\n    return connect(options);\n  }\n\n  return window.__REDUX_DEVTOOLS_EXTENSION__.connect(options);\n}\n\nexports.default = {\n  connect: connect,\n  connectViaExtension: connectViaExtension,\n  send: _send,\n  extractState: extractState,\n  generateId: generateId\n};","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/node_modules/remotedev/lib/devTools.js"],"names":["exports","__esModule","send","undefined","extractState","generateId","start","connect","connectViaExtension","_jsan","require","_socketclusterClient","_socketclusterClient2","_interopRequireDefault","_rnHostDetect","_rnHostDetect2","_constants","obj","default","socket","channel","listeners","message","state","parse","Math","random","toString","substr","handleMessages","payload","action","Object","keys","forEach","id","instanceId","fn","watch","emit","err","channelName","console","log","subscribe","on","connectToServer","options","socketOptions","port","hostname","secure","defaultSocketOptions","create","transformAction","config","liftedAction","timestamp","Date","now","getActionType","type","_send","setTimeout","stringify","name","arguments","length","init","listener","push","unsubscribe","index","indexOf","splice","error","remote","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.send = undefined;\nexports.extractState = extractState;\nexports.generateId = generateId;\nexports.start = start;\nexports.connect = connect;\nexports.connectViaExtension = connectViaExtension;\n\nvar _jsan = require('jsan');\n\nvar _socketclusterClient = require('socketcluster-client');\n\nvar _socketclusterClient2 = _interopRequireDefault(_socketclusterClient);\n\nvar _rnHostDetect = require('rn-host-detect');\n\nvar _rnHostDetect2 = _interopRequireDefault(_rnHostDetect);\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar socket = undefined;\nvar channel = undefined;\nvar listeners = {};\n\nfunction extractState(message) {\n  if (!message || !message.state) return undefined;\n  if (typeof message.state === 'string') return (0, _jsan.parse)(message.state);\n  return message.state;\n}\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2);\n}\n\nfunction handleMessages(message) {\n  if (!message.payload) message.payload = message.action;\n  Object.keys(listeners).forEach(function (id) {\n    if (message.instanceId && id !== message.instanceId) return;\n    if (typeof listeners[id] === 'function') listeners[id](message);else listeners[id].forEach(function (fn) {\n      fn(message);\n    });\n  });\n}\n\nfunction watch() {\n  if (channel) return;\n  socket.emit('login', 'master', function (err, channelName) {\n    if (err) {\n      console.log(err);return;\n    }\n    channel = socket.subscribe(channelName);\n    channel.watch(handleMessages);\n    socket.on(channelName, handleMessages);\n  });\n}\n\nfunction connectToServer(options) {\n  if (socket) return;\n  var socketOptions = undefined;\n  if (options.port) {\n    socketOptions = {\n      port: options.port,\n      hostname: (0, _rnHostDetect2.default)(options.hostname || 'localhost'),\n      secure: !!options.secure\n    };\n  } else socketOptions = _constants.defaultSocketOptions;\n  socket = _socketclusterClient2.default.create(socketOptions);\n  watch();\n}\n\nfunction start(options) {\n  if (options) {\n    if (options.port && !options.hostname) {\n      options.hostname = 'localhost';\n    }\n  }\n  connectToServer(options);\n}\n\nfunction transformAction(action, config) {\n  if (action.action) return action;\n  var liftedAction = { timestamp: Date.now() };\n  if (action) {\n    if (config.getActionType) liftedAction.action = config.getActionType(action);else {\n      if (typeof action === 'string') liftedAction.action = { type: action };else if (!action.type) liftedAction.action = { type: 'update' };else liftedAction.action = action;\n    }\n  } else {\n    liftedAction.action = { type: action };\n  }\n  return liftedAction;\n}\n\nfunction _send(action, state, options, type, instanceId) {\n  start(options);\n  setTimeout(function () {\n    var message = {\n      payload: state ? (0, _jsan.stringify)(state) : '',\n      action: type === 'ACTION' ? (0, _jsan.stringify)(transformAction(action, options)) : action,\n      type: type || 'ACTION',\n      id: socket.id,\n      instanceId: instanceId,\n      name: options.name\n    };\n    socket.emit(socket.id ? 'log' : 'log-noid', message);\n  }, 0);\n}\n\nexports.send = _send;\nfunction connect() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var id = generateId(options.instanceId);\n  start(options);\n  return {\n    init: function init(state, action) {\n      _send(action || {}, state, options, 'INIT', id);\n    },\n    subscribe: function subscribe(listener) {\n      if (!listener) return undefined;\n      if (!listeners[id]) listeners[id] = [];\n      listeners[id].push(listener);\n\n      return function unsubscribe() {\n        var index = listeners[id].indexOf(listener);\n        listeners[id].splice(index, 1);\n      };\n    },\n    unsubscribe: function unsubscribe() {\n      delete listeners[id];\n    },\n    send: function send(action, payload) {\n      if (action) {\n        _send(action, payload, options, 'ACTION', id);\n      } else {\n        _send(undefined, payload, options, 'STATE', id);\n      }\n    },\n    error: function error(payload) {\n      socket.emit({ type: 'ERROR', payload: payload, id: socket.id, instanceId: id });\n    }\n  };\n}\n\nfunction connectViaExtension(options) {\n  if (options && options.remote || typeof window === 'undefined' || !window.__REDUX_DEVTOOLS_EXTENSION__) {\n    return connect(options);\n  }\n  return window.__REDUX_DEVTOOLS_EXTENSION__.connect(options);\n}\n\nexports.default = { connect: connect, connectViaExtension: connectViaExtension, send: _send, extractState: extractState, generateId: generateId };"]},"metadata":{},"sourceType":"script"}