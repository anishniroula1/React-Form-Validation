{"ast":null,"code":"import { Validators } from \"./library/Validator\";\nexport const userQuestions = (username, password, formError) => {\n  return {\n    username: {\n      value: username,\n      key: 'username',\n      label: 'What is your Username',\n      min: 5,\n      required: {\n        validator: Validators.required,\n        message: 'Username Must Present'\n      },\n      formError: ''\n    },\n    password: {\n      value: password,\n      key: 'password',\n      label: 'What is your Password',\n      min: 5,\n      type: 'password',\n      required: passwordValidator(password)\n    },\n    formError: formError\n  };\n};\n\nconst passwordValidator = password => password ? {\n  validator: Validators.password,\n  message: 'Please Add Correct Password'\n} : {\n  validator: Validators.required,\n  message: 'Please fillout the form'\n};","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/userQuestions.js"],"names":["Validators","userQuestions","username","password","formError","value","key","label","min","required","validator","message","type","passwordValidator"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,qBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,SAArB,KAAoC;AAC7D,SAAO;AACHF,IAAAA,QAAQ,EAAE;AACNG,MAAAA,KAAK,EAAEH,QADD;AAENI,MAAAA,GAAG,EAAE,UAFC;AAGNC,MAAAA,KAAK,EAAE,uBAHD;AAINC,MAAAA,GAAG,EAAE,CAJC;AAKNC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,SAAS,EAAEV,UAAU,CAACS,QADhB;AAENE,QAAAA,OAAO,EAAE;AAFH,OALJ;AASNP,MAAAA,SAAS,EAAE;AATL,KADP;AAYHD,IAAAA,QAAQ,EAAE;AACNE,MAAAA,KAAK,EAAEF,QADD;AAENG,MAAAA,GAAG,EAAE,UAFC;AAGNC,MAAAA,KAAK,EAAE,uBAHD;AAINC,MAAAA,GAAG,EAAE,CAJC;AAKNI,MAAAA,IAAI,EAAE,UALA;AAMNH,MAAAA,QAAQ,EAAEI,iBAAiB,CAACV,QAAD;AANrB,KAZP;AAoBHC,IAAAA,SAAS,EAAEA;AApBR,GAAP;AAsBH,CAvBM;;AAyBP,MAAMS,iBAAiB,GAAIV,QAAD,IAAcA,QAAQ,GAAG;AAC3CO,EAAAA,SAAS,EAAEV,UAAU,CAACG,QADqB;AAE3CQ,EAAAA,OAAO,EAAE;AAFkC,CAAH,GAGxC;AACAD,EAAAA,SAAS,EAAEV,UAAU,CAACS,QADtB;AAEAE,EAAAA,OAAO,EAAE;AAFT,CAHR","sourcesContent":["import {Validators} from \"./library/Validator\";\n\nexport const userQuestions = (username, password, formError?) => {\n    return {\n        username: {\n            value: username,\n            key: 'username',\n            label: 'What is your Username',\n            min: 5,\n            required: {\n                validator: Validators.required,\n                message: 'Username Must Present'\n            },\n            formError: ''\n        },\n        password: {\n            value: password,\n            key: 'password',\n            label: 'What is your Password',\n            min: 5,\n            type: 'password',\n            required: passwordValidator(password)\n        },\n        formError: formError\n    }\n};\n\nconst passwordValidator = (password) => password ? {\n        validator: Validators.password,\n        message: 'Please Add Correct Password'\n    } : {\n        validator: Validators.required,\n        message: 'Please fillout the form'\n    };\n"]},"metadata":{},"sourceType":"module"}