{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport { userQuestions } from \"./userQuestions\";\nimport connectToDevTools from 'remotedev-react-state';\nimport { useDispatch } from \"react-redux\";\nimport { GotFormErrorAction } from \"./core/form-error.Actions\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.handleChange = key => value => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      let {\n        username,\n        password\n      } = this.state;\n      alert(`${this.state.username}`);\n    };\n\n    this.dispatch = useDispatch();\n  }\n\n  componentWillMount() {\n    // Connect to devtools after setup initial state\n    connectToDevTools(this\n    /*, options */\n    );\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      formError\n    } = this.state;\n    const question = userQuestions(username, password);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextBox, {\n      question: question.username,\n      onChange: this.handleChange(question.username.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.dispatch(GotFormErrorAction(true)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default App;\nexport function formQuestions(label, value) {\n  return {\n    label: label,\n    value: value\n  };\n}","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/App.js"],"names":["React","Component","TextBox","userQuestions","connectToDevTools","useDispatch","GotFormErrorAction","App","state","username","password","handleChange","key","value","setState","handleSubmit","alert","dispatch","componentWillMount","render","formError","question","formQuestions","label"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,kBAAR,QAAiC,2BAAjC;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAMxBO,KANwB,GAMhB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KANgB;;AAAA,SAUxBC,YAVwB,GAURC,GAAD,IAAUC,KAAD,IAAW;AAC/B,WAAKC,QAAL,CAAc;AAAC,SAACF,GAAD,GAAOC;AAAR,OAAd;AACH,KAZuB;;AAAA,SAcxBE,YAdwB,GAcT,MAAM;AACjB,UAAI;AAACN,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAuB,KAAKF,KAAhC;AACAQ,MAAAA,KAAK,CAAE,GAAE,KAAKR,KAAL,CAAWC,QAAS,EAAxB,CAAL;AACH,KAjBuB;;AAAA,SAmBxBQ,QAnBwB,GAmBbZ,WAAW,EAnBE;AAAA;;AACxBa,EAAAA,kBAAkB,GAAG;AACjB;AACAd,IAAAA,iBAAiB,CAAC;AAAI;AAAL,KAAjB;AACH;;AAiBDe,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBU,MAAAA;AAArB,QAAkC,KAAKZ,KAA7C;AACA,UAAMa,QAAQ,GAAGlB,aAAa,CAACM,QAAD,EAAWC,QAAX,CAA9B;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AACI,MAAA,QAAQ,EAAEW,QAAQ,CAACZ,QADvB;AAEI,MAAA,QAAQ,EAAE,KAAKE,YAAL,CAAkBU,QAAQ,CAACZ,QAAT,CAAkBG,GAApC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eASI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKK,QAAL,CAAcX,kBAAkB,CAAC,IAAD,CAAhC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CADJ,CADJ;AAeH;;AAxCuB;;AA4C5B,eAAeC,GAAf;AACA,OAAO,SAASe,aAAT,CAAuBC,KAAvB,EAAsCV,KAAtC,EAAsD;AACzD,SAAO;AAACU,IAAAA,KAAK,EAAEA,KAAR;AAAeV,IAAAA,KAAK,EAAEA;AAAtB,GAAP;AACH","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport {userQuestions} from \"./userQuestions\";\nimport connectToDevTools from 'remotedev-react-state'\nimport {useDispatch} from \"react-redux\";\nimport {GotFormErrorAction} from \"./core/form-error.Actions\";\n\n\nclass App extends Component {\n    componentWillMount() {\n        // Connect to devtools after setup initial state\n        connectToDevTools(this/*, options */)\n    }\n\n    state = {\n        username: '',\n        password: '',\n    };\n    handleChange = (key) => (value) => {\n        this.setState({[key]: value});\n    };\n\n    handleSubmit = () => {\n        let {username, password} = this.state;\n        alert(`${this.state.username}`)\n    };\n\n    dispatch = useDispatch();\n\n    render() {\n        const {username, password, formError} = this.state;\n        const question = userQuestions(username, password);\n\n        return (\n            <React.Fragment>\n                <form>\n                <TextBox\n                    question={question.username}\n                    onChange={this.handleChange(question.username.key)}/>\n                    <br/>\n\n                    {/*<TextBox\n                        question={question.password}\n                        onChange={this.handleChange(question.password.key)} getError={() => this.getError}/>*/}\n                    <button type=\"button\" onClick={() => this.dispatch(GotFormErrorAction(true))}>Submit</button>\n                </form>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default App;\nexport function formQuestions(label: string, value?: string) {\n    return {label: label, value: value}\n}\n"]},"metadata":{},"sourceType":"module"}