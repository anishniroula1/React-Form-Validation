{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/core/textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from \"../library/Validator\";\n\nconst TextBox = ({\n  question,\n  onChange,\n  onBlur\n}) => {\n  /*const handleBlur = (event) => {\n      const {value} = event.target;\n      const requiredValidators = !!question.required && [\n          {check: question.required.validator, message: question.required.message}\n      ];\n      setError(validateInput(requiredValidators, value));\n   };*/\n  const [values, setValue] = useState({});\n\n  const handleChange = event => {\n    event.persist();\n    setValue(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n    onChange(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, question.label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"app-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 32\n    }\n  }, question.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: question.key,\n    type: !question.type ? 'text' : question.type,\n    value: values[question.key],\n    onChange: handleChange,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }), question.error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 32\n    }\n  }, question.error));\n};\n\nTextBox.propTypes = {\n  value: PropTypes.string || PropTypes.number // formError: PropTypes.func.isRequired,\n\n};\nTextBox.defaultProps = {\n  value: ''\n};\nexport default TextBox;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/core/textbox.js"],"names":["React","useState","PropTypes","validateInput","TextBox","question","onChange","onBlur","values","setValue","handleChange","event","persist","target","name","value","label","key","type","error","propTypes","string","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAC9C;;;;;;;AAQA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,OAAN;AACAH,IAAAA,QAAQ,CAACD,MAAM,KAAK,EAAC,GAAGA,MAAJ;AAAY,OAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAA9C,KAAL,CAAP,CAAR;AACAT,IAAAA,QAAQ,CAACK,KAAK,CAACE,MAAN,CAAaE,KAAd,CAAR;AACH,GAJD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,QAAQ,CAACW,KAAT,iBAAkB;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCX,QAAQ,CAACW,KAA3C,CADvB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AACI,IAAA,IAAI,EAAEX,QAAQ,CAACY,GADnB;AAEI,IAAA,IAAI,EAAE,CAACZ,QAAQ,CAACa,IAAV,GAAiB,MAAjB,GAA0Bb,QAAQ,CAACa,IAF7C;AAGI,IAAA,KAAK,EAAEV,MAAM,CAACH,QAAQ,CAACY,GAAV,CAHjB;AAII,IAAA,QAAQ,EAAEP,YAJd;AAKI,IAAA,MAAM,EAAEH,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,EAUKF,QAAQ,CAACc,KAAT,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOd,QAAQ,CAACc,KAAhB,CAVvB,CADJ;AAcH,CA/BD;;AAiCAf,OAAO,CAACgB,SAAR,GAAoB;AAChBL,EAAAA,KAAK,EAAEb,SAAS,CAACmB,MAAV,IAAoBnB,SAAS,CAACoB,MADrB,CAEhB;;AAFgB,CAApB;AAKAlB,OAAO,CAACmB,YAAR,GAAuB;AACnBR,EAAAA,KAAK,EAAE;AADY,CAAvB;AAIA,eAAeX,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {validateInput} from \"../library/Validator\";\n\nconst TextBox = ({question, onChange, onBlur}) => {\n    /*const handleBlur = (event) => {\n        const {value} = event.target;\n        const requiredValidators = !!question.required && [\n            {check: question.required.validator, message: question.required.message}\n        ];\n        setError(validateInput(requiredValidators, value));\n\n    };*/\n    const [values, setValue] = useState({});\n    const handleChange = (event) => {\n        event.persist();\n        setValue(values => ({...values, [event.target.name]: event.target.value}));\n        onChange(event.target.value)\n    };\n\n\n    return (\n        <div>\n            {question.label && <label htmlFor=\"app-input-field\">{question.label}</label>}\n            <br/>\n            <input\n                name={question.key}\n                type={!question.type ? 'text' : question.type}\n                value={values[question.key]}\n                onChange={handleChange}\n                onBlur={onBlur}\n            /><br/>\n            {question.error && <span>{question.error}</span>}\n        </div>\n    )\n};\n\nTextBox.propTypes = {\n    value: PropTypes.string || PropTypes.number,\n    // formError: PropTypes.func.isRequired,\n};\n\nTextBox.defaultProps = {\n    value: '',\n};\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}