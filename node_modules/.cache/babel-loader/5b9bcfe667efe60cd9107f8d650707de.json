{"ast":null,"code":"import { Validators } from \"./library/Validator\";\nexport const userQuestions = (values, errors) => {\n  return {\n    email: {\n      value: values.email,\n      key: 'email',\n      label: 'What is your Username',\n      min: 5,\n      error: errors.email\n    },\n    password: {\n      value: values.password,\n      key: 'password',\n      label: 'What is your Password',\n      min: 5,\n      type: 'password',\n      error: errors.password\n    }\n  };\n};\nexport default function validate(values) {\n  let errors = {};\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z].{2,}$/i.test(values.email)) {\n    errors.email = \"Please enter a valid email address\";\n  }\n  /*const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n   if (!values.phoneNumber) {\n      errors.phoneNumber = \"Phone number is required\";\n  } /!*else if (!values.phone.match(phoneno)) {\n      errors.phoneNumber = \"Please enter a phone number with 10  digits.  1 not necessary\"\n  }*!/\n    if (!values.dateOfBirthYear) {\n      errors.dateOfBirthYear = \"Please enter your birth year\";\n  }\n  else if (values.dateOfBirthYear <= 1900 || values.dateOfBirthYear > 2019) {\n      errors.dateOfBirthYear = \"Please enter a valid year between 1900-2019\";\n  }*/\n\n\n  return errors;\n}\n;\nexport const loginValidate = values => {\n  // true means invalid, so our conditions got reversed\n  return {\n    email: Object.keys(values.email).length === 0 || !/\\S+@\\S+\\.\\S+/.test(values.email),\n    password: Object.keys(values.password).length === 0 || values.password.length < 8\n  };\n};","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/userQuestions.js"],"names":["Validators","userQuestions","values","errors","email","value","key","label","min","error","password","type","validate","test","loginValidate","Object","keys","length"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,qBAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC7C,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEH,MAAM,CAACE,KADX;AAEHE,MAAAA,GAAG,EAAE,OAFF;AAGHC,MAAAA,KAAK,EAAE,uBAHJ;AAIHC,MAAAA,GAAG,EAAE,CAJF;AAKHC,MAAAA,KAAK,EAAEN,MAAM,CAACC;AALX,KADJ;AAQHM,IAAAA,QAAQ,EAAE;AACNL,MAAAA,KAAK,EAAEH,MAAM,CAACQ,QADR;AAENJ,MAAAA,GAAG,EAAE,UAFC;AAGNC,MAAAA,KAAK,EAAE,uBAHD;AAINC,MAAAA,GAAG,EAAE,CAJC;AAKNG,MAAAA,IAAI,EAAE,UALA;AAMNF,MAAAA,KAAK,EAAEN,MAAM,CAACO;AANR;AARP,GAAP;AAiBH,CAlBM;AAqBP,eAAe,SAASE,QAAT,CAAkBV,MAAlB,EAA0B;AACrC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAID,MAAM,CAACE,KAAP,IAAgB,CAAC,4CAA4CS,IAA5C,CAAiDX,MAAM,CAACE,KAAxD,CAArB,EAAqF;AACjFD,IAAAA,MAAM,CAACC,KAAP,GAAe,oCAAf;AACH;AAED;;;;;;;;;;;;;;AAgBA,SAAOD,MAAP;AACH;AAAA;AAGD,OAAO,MAAMW,aAAa,GAAIZ,MAAD,IAAY;AACrC;AACA,SAAO;AACHE,IAAAA,KAAK,EAAEW,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACE,KAAnB,EAA0Ba,MAA1B,KAAqC,CAArC,IAA0C,CAAC,eAAeJ,IAAf,CAAoBX,MAAM,CAACE,KAA3B,CAD/C;AAEHM,IAAAA,QAAQ,EAAEK,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACQ,QAAnB,EAA6BO,MAA7B,KAAwC,CAAxC,IAA6Cf,MAAM,CAACQ,QAAP,CAAgBO,MAAhB,GAAyB;AAF7E,GAAP;AAIH,CANM","sourcesContent":["import {Validators} from \"./library/Validator\";\n\nexport const userQuestions = (values, errors) => {\n    return {\n        email: {\n            value: values.email,\n            key: 'email',\n            label: 'What is your Username',\n            min: 5,\n            error: errors.email\n        },\n        password: {\n            value: values.password,\n            key: 'password',\n            label: 'What is your Password',\n            min: 5,\n            type: 'password',\n            error: errors.password\n        },\n    }\n};\n\n\nexport default function validate(values) {\n    let errors = {};\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z].{2,}$/i.test(values.email)) {\n        errors.email = \"Please enter a valid email address\";\n    }\n\n    /*const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n    if (!values.phoneNumber) {\n        errors.phoneNumber = \"Phone number is required\";\n    } /!*else if (!values.phone.match(phoneno)) {\n        errors.phoneNumber = \"Please enter a phone number with 10  digits.  1 not necessary\"\n    }*!/\n\n\n    if (!values.dateOfBirthYear) {\n        errors.dateOfBirthYear = \"Please enter your birth year\";\n    }\n    else if (values.dateOfBirthYear <= 1900 || values.dateOfBirthYear > 2019) {\n        errors.dateOfBirthYear = \"Please enter a valid year between 1900-2019\";\n    }*/\n\n    return errors;\n};\n\n\nexport const loginValidate = (values) => {\n    // true means invalid, so our conditions got reversed\n    return {\n        email: Object.keys(values.email).length === 0 || !/\\S+@\\S+\\.\\S+/.test(values.email),\n        password: Object.keys(values.password).length === 0 || values.password.length < 8\n    };\n}\n"]},"metadata":{},"sourceType":"module"}