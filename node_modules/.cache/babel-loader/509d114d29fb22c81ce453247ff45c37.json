{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = (validate, runOnSubmit) => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState([]);\n  const [isSubmitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        setTouched([]);\n        runOnSubmit();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n  useEffect(() => {\n    const validationErrors = validate(values);\n    const touchedErrors = Object.keys(validationErrors).filter(key => touched.includes(key)).reduce((acc, key) => {\n      if (!acc[key]) {\n        acc[key] = validationErrors[key];\n      }\n\n      return acc;\n    }, {});\n    setErrors(touchedErrors);\n  }, [touched, values]);\n\n  const handleChange = event => {\n    if (event.checkbox === true) {\n      setValues(values => ({ ...values,\n        [event.name]: event.checked\n      }));\n    } else {\n      event.persist();\n      setValues(values => ({ ...values,\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n\n  const handleBlur = event => {\n    if (!touched.includes(event.target.name)) {\n      setTouched([...touched, event.target.name]);\n    }\n  };\n\n  const handleCheckBox = 45;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  };\n\n  return {\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    errors,\n    isSubmitting,\n    setValues\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/library/useForm.js"],"names":["useState","useEffect","useForm","validate","runOnSubmit","values","setValues","errors","setErrors","touched","setTouched","isSubmitting","setSubmitting","noErrors","Object","keys","length","validationErrors","touchedErrors","filter","key","includes","reduce","acc","handleChange","event","checkbox","name","checked","persist","target","value","handleBlur","handleCheckBox","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validate, runOnSubmit) => {\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n\n    const [touched, setTouched] = useState([]);\n    const [isSubmitting, setSubmitting] = useState(false);\n\n\n    useEffect(() => {\n        if (isSubmitting) {\n            const noErrors = Object.keys(errors).length === 0;\n            if (noErrors) {\n                setTouched([]);\n                runOnSubmit();\n                setSubmitting(false);\n            } else {\n                setSubmitting(false);\n            }\n        }\n    }, [errors]);\n\n    useEffect(() => {\n        const validationErrors = validate(values);\n        const touchedErrors = Object.keys(validationErrors)\n            .filter(key => touched.includes(key))\n            .reduce((acc, key) => {\n                if (!acc[key]) {\n                    acc[key] = validationErrors[key]\n                }\n                return acc\n            }, {});\n        setErrors(touchedErrors);\n    }, [touched, values]);\n\n\n    const handleChange = (event) => {\n        if (event.checkbox === true) {\n            setValues(values => ({ ...values, [event.name]: event.checked }));\n        } else {\n            event.persist();\n            setValues(values => ({...values, [event.target.name]: event.target.value}));\n        }\n    };\n\n    const handleBlur = (event) => {\n        if (!touched.includes(event.target.name)) {\n            setTouched([\n                ...touched,\n                event.target.name\n            ])\n        }\n    };\n\n    const handleCheckBox = 45;\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const validationErrors = validate(values);\n        setErrors(validationErrors);\n        setSubmitting(true);\n    };\n\n\n    return {\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        isSubmitting,\n        setValues\n    };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}