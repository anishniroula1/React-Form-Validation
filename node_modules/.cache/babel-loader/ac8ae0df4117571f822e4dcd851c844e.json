{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/library/questions/checkbox-group-question.js\";\nimport React, { useState } from \"react\";\n\nconst CheckboxGroupQuestion = ({\n  question,\n  onChange,\n  onBlur\n}) => {\n  const [inputs, setInputs] = useState([]);\n  console.log(inputs);\n\n  const handleChange = event => {\n    onChange({\n      checkboxGroup: true,\n      name: event.target.name,\n      value: event.target.value\n    }); // const index = inputs.findIndex(item => item === event.target.value);\n\n    /*if (~index) {\n        setInputs([\n            ...inputs.slice(0, index),\n            ...inputs.slice(index + 1)\n        ]);\n    } else {\n        setInputs([...inputs, event.target.value]);\n    }*/\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, question.label), question.data.map(data => /*#__PURE__*/React.createElement(\"label\", {\n    key: data.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: question.key,\n    value: data.value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }), data.value)));\n};\n\nexport default CheckboxGroupQuestion;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/library/questions/checkbox-group-question.js"],"names":["React","useState","CheckboxGroupQuestion","question","onChange","onBlur","inputs","setInputs","console","log","handleChange","event","checkboxGroup","name","target","value","label","data","map","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAC5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACJO,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACI,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC5BP,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,aAAa,EAAE,IAAhB;AAAsBC,MAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaD,IAAzC;AAA+CE,MAAAA,KAAK,EAAEJ,KAAK,CAACG,MAAN,CAAaC;AAAnE,KAAD,CAAR,CAD4B,CAE5B;;AAEA;;;;;;;;AAQH,GAZD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,QAAQ,CAACa,KAAb,CADJ,EAESb,QAAQ,CAACc,IAAT,CAAcC,GAAd,CAAkBD,IAAI,iBACnB;AAAO,IAAA,GAAG,EAAEA,IAAI,CAACF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAEZ,QAAQ,CAACgB,GAFnB;AAGI,IAAA,KAAK,EAAEF,IAAI,CAACF,KAHhB;AAII,IAAA,QAAQ,EAAEL,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKO,IAAI,CAACF,KAPV,CADH,CAFT,CADJ;AAgBH,CAjCD;;AAmCA,eAAeb,qBAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst CheckboxGroupQuestion = ({question, onChange, onBlur}) => {\n    const [inputs, setInputs] = useState([]);\nconsole.log(inputs);\n    const handleChange = (event) => {\n        onChange({checkboxGroup: true, name: event.target.name, value: event.target.value})\n        // const index = inputs.findIndex(item => item === event.target.value);\n\n        /*if (~index) {\n            setInputs([\n                ...inputs.slice(0, index),\n                ...inputs.slice(index + 1)\n            ]);\n        } else {\n            setInputs([...inputs, event.target.value]);\n        }*/\n    };\n\n    return (\n        <div>\n            <p>{question.label}</p>\n                {question.data.map(data => (\n                    <label key={data.value}>\n                        <input\n                            type=\"checkbox\"\n                            name={question.key}\n                            value={data.value}\n                            onChange={handleChange}\n                        />\n                        {data.value}\n                    </label>\n                ))}\n        </div>\n    );\n};\n\nexport default CheckboxGroupQuestion;\n"]},"metadata":{},"sourceType":"module"}