{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = validate => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [touched, setTouched] = useState({}); // This is for Future if needed do not remove\n\n  /*useEffect(() => {\n      if (Object.keys(errors).length === 0 && isSubmitting) {\n          const x = 0;\n      }\n  }, [errors]);*/\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setErrors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/useForm.js"],"names":["useState","useEffect","useForm","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","touched","setTouched","handleSubmit","event","preventDefault","handleChange","persist","target","name","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC,CAL0B,CAO1B;;AACA;;;;;;AAMA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAIF,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACG,OAAN;AACAX,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACS,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACH,GAHD;;AAKA,SAAO;AACHJ,IAAAA,YADG;AAEHH,IAAAA,YAFG;AAGHR,IAAAA,MAHG;AAIHE,IAAAA,MAJG;AAKHC,IAAAA;AALG,GAAP;AAOH,CA/BD;;AAiCA,eAAeL,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validate) => {\n\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [touched, setTouched] = useState({});\n\n    // This is for Future if needed do not remove\n    /*useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            const x = 0;\n        }\n    }, [errors]);*/\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        setErrors\n    }\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}