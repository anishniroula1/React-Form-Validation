{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/core/checkbox.js\";\nimport React, { Component, useState } from \"react\";\n/*const Checkbox = ({question, onChange, onBlur}) => {\n    const [values, setValue] = useState({});\n    const handleChange = (event) => {\n        event.persist();\n        setValue(values => ({...values, [event.target.name]: event.target.value}));\n        onChange(event)\n    };*/\n\nclass Checkbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      accept: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [this.state.accept = this.props.question.key]: event.target.value\n      });\n      this.props.onChange(event);\n    };\n  }\n\n  render() {\n    const {\n      question,\n      onBlur\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: question.key,\n      type: \"checkbox\",\n      value: this.state.accept,\n      defaultChecked: this.state.accept,\n      onChange: this.handleChange,\n      onBlur: onBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), question.label), question.error && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 36\n      }\n    }, question.error));\n  }\n\n}\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/core/checkbox.js"],"names":["React","Component","useState","Checkbox","state","accept","handleChange","event","setState","props","question","key","target","value","onChange","render","onBlur","label","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA;;;;;;;;AAOA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,MAAM,EAAE;AADJ,KADqB;;AAAA,SAI7BC,YAJ6B,GAIbC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAAC,SAAC,KAAKJ,KAAL,CAAWC,MAAX,GAAoB,KAAKI,KAAL,CAAWC,QAAX,CAAoBC,GAAzC,GAA+CJ,KAAK,CAACK,MAAN,CAAaC;AAA7D,OAAd;AACA,WAAKJ,KAAL,CAAWK,QAAX,CAAoBP,KAApB;AACH,KAP4B;AAAA;;AAS7BQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA,QAAD;AAAWM,MAAAA;AAAX,QAAqB,KAAKP,KAAhC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAEC,QAAQ,CAACC,GADnB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,MAHtB;AAII,MAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,MAJ/B;AAKI,MAAA,QAAQ,EAAE,KAAKC,YALnB;AAMI,MAAA,MAAM,EAAEU,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQKN,QAAQ,CAACO,KARd,CADJ,EAWKP,QAAQ,CAACQ,KAAT,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,QAAQ,CAACQ,KAAhB,CAXvB,CADJ;AAeH;;AA1B4B;;AA6BjC,eAAef,QAAf","sourcesContent":["import React, {Component, useState} from \"react\";\n/*const Checkbox = ({question, onChange, onBlur}) => {\n    const [values, setValue] = useState({});\n    const handleChange = (event) => {\n        event.persist();\n        setValue(values => ({...values, [event.target.name]: event.target.value}));\n        onChange(event)\n    };*/\nclass Checkbox extends Component {\n    state = {\n        accept: false\n    };\n    handleChange = (event) => {\n        this.setState({[this.state.accept = this.props.question.key]: event.target.value});\n        this.props.onChange(event);\n    };\n\n    render() {\n        const {question, onBlur} = this.props;\n        return (\n            <div>\n                <label>\n                    <input\n                        name={question.key}\n                        type=\"checkbox\"\n                        value={this.state.accept}\n                        defaultChecked={this.state.accept}\n                        onChange={this.handleChange}\n                        onBlur={onBlur}/>\n                    {question.label}\n                </label>\n                {question.error && <span>{question.error}</span>}\n            </div>\n        );\n    }\n}\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}