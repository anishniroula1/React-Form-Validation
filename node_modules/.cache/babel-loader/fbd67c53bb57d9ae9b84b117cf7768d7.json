{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/core/textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from \"../library/Validator\";\n\nconst TextBox = ({\n  question,\n  onChange,\n  onBlur\n}) => {\n  /*const handleBlur = (event) => {\n      const {value} = event.target;\n      const requiredValidators = !!question.required && [\n          {check: question.required.validator, message: question.required.message}\n      ];\n      setError(validateInput(requiredValidators, value));\n   };*/\n  const handleChange = event => {\n    onChange(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, question.label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"app-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 32\n    }\n  }, question.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: question.key,\n    type: !question.type ? 'text' : question.type,\n    value: question.value || '',\n    onChange: onChange,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), question.error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }, question.error));\n};\n\nTextBox.propTypes = {\n  value: PropTypes.string || PropTypes.number // formError: PropTypes.func.isRequired,\n\n};\nTextBox.defaultProps = {\n  value: ''\n};\nexport default TextBox;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/core/textbox.js"],"names":["React","useState","PropTypes","validateInput","TextBox","question","onChange","onBlur","handleChange","event","target","value","label","key","type","error","propTypes","string","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAC9C;;;;;;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QAAQ,CAACO,KAAT,iBAAkB;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCP,QAAQ,CAACO,KAA3C,CADvB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AACI,IAAA,IAAI,EAAEP,QAAQ,CAACQ,GADnB;AAEI,IAAA,IAAI,EAAE,CAACR,QAAQ,CAACS,IAAV,GAAiB,MAAjB,GAA0BT,QAAQ,CAACS,IAF7C;AAGI,IAAA,KAAK,EAAET,QAAQ,CAACM,KAAT,IAAkB,EAH7B;AAII,IAAA,QAAQ,EAAEL,QAJd;AAKI,IAAA,MAAM,EAAEC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,EAUKF,QAAQ,CAACU,KAAT,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,QAAQ,CAACU,KAAhB,CAVvB,CADJ;AAcH,CA7BD;;AA+BAX,OAAO,CAACY,SAAR,GAAoB;AAChBL,EAAAA,KAAK,EAAET,SAAS,CAACe,MAAV,IAAoBf,SAAS,CAACgB,MADrB,CAEhB;;AAFgB,CAApB;AAKAd,OAAO,CAACe,YAAR,GAAuB;AACnBR,EAAAA,KAAK,EAAE;AADY,CAAvB;AAIA,eAAeP,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {validateInput} from \"../library/Validator\";\n\nconst TextBox = ({question, onChange, onBlur}) => {\n    /*const handleBlur = (event) => {\n        const {value} = event.target;\n        const requiredValidators = !!question.required && [\n            {check: question.required.validator, message: question.required.message}\n        ];\n        setError(validateInput(requiredValidators, value));\n\n    };*/\n\n    const handleChange = (event) => {\n        onChange(event.target.value);\n    };\n\n\n    return (\n        <div>\n            {question.label && <label htmlFor=\"app-input-field\">{question.label}</label>}\n            <br/>\n            <input\n                name={question.key}\n                type={!question.type ? 'text' : question.type}\n                value={question.value || ''}\n                onChange={onChange}\n                onBlur={onBlur}\n            /><br/>\n            {question.error && <span>{question.error}</span>}\n        </div>\n    )\n};\n\nTextBox.propTypes = {\n    value: PropTypes.string || PropTypes.number,\n    // formError: PropTypes.func.isRequired,\n};\n\nTextBox.defaultProps = {\n    value: '',\n};\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}