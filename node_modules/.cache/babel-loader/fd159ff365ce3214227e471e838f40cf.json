{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport { userQuestions } from \"./userQuestions\";\nimport useForm from \"./useForm\";\nimport validate from './LoginFormValidationRules';\n/*class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            formError: ''\n        };\n    }\n    handleChange = (key) => (value) => {\n        this.setState({[key]: value});\n    };\n\n    handleError = (data) => {\n        return data;\n    };\n\n    handleSubmit = (event) => {\n        console.log(event);\n        if (event) event.preventDefault();\n        alert(JSON.stringify(this.state));\n    };\n\n    render() {*/\n\nconst App = () => {\n  const question = userQuestions(values.email, values.password);\n  const {\n    values,\n    errors,\n    setValues,\n    handleChange,\n    handleSubmit\n  } = useForm(login, validate);\n\n  function login() {\n    console.log('No errors, submit callback called!');\n  } // const question = userQuestions(values.email, values.password);\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextBox, {\n    question: question.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextBox, {\n    question: question.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"help is-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, errors.email), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n};\n\nexport default App;\nexport function formQuestions(label, value) {\n  return {\n    label: label,\n    value: value\n  };\n}","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/App.js"],"names":["React","Component","TextBox","userQuestions","useForm","validate","App","question","values","email","password","errors","setValues","handleChange","handleSubmit","login","console","log","formQuestions","label","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAMC,QAAQ,GAAGJ,aAAa,CAACK,MAAM,CAACC,KAAR,EAAeD,MAAM,CAACE,QAAtB,CAA9B;AACI,QAAM;AACFF,IAAAA,MADE;AAEFG,IAAAA,MAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,MAMFV,OAAO,CAACW,KAAD,EAAQV,QAAR,CANX;;AAQA,WAASU,KAAT,GAAiB;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH,GAZS,CAaV;;;AAEJ,sBACI;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAEP,QAAQ,CAACE,KADvB;AAEI,IAAA,QAAQ,EAAEI,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,eAMI,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEN,QAAQ,CAACG,QAA5B;AAAsC,IAAA,QAAQ,EAAEG,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAUKF,MAAM,CAACF,KAAP,iBACG;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,MAAM,CAACF,KAAtC,CAXR,eAaI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CADJ;AAkBH,CAjCD;;AAoCA,eAAeH,GAAf;AACA,OAAO,SAASY,aAAT,CAAuBC,KAAvB,EAAsCC,KAAtC,EAAsD;AACzD,SAAO;AAACD,IAAAA,KAAK,EAAEA,KAAR;AAAeC,IAAAA,KAAK,EAAEA;AAAtB,GAAP;AACH","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TextBox from \"./core/textbox\";\nimport {userQuestions} from \"./userQuestions\";\nimport useForm from \"./useForm\";\nimport validate from './LoginFormValidationRules';\n\n\n/*class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            formError: ''\n        };\n    }\n    handleChange = (key) => (value) => {\n        this.setState({[key]: value});\n    };\n\n    handleError = (data) => {\n        return data;\n    };\n\n    handleSubmit = (event) => {\n        console.log(event);\n        if (event) event.preventDefault();\n        alert(JSON.stringify(this.state));\n    };\n\n    render() {*/\nconst App = () => {\n    const question = userQuestions(values.email, values.password);\n        const {\n            values,\n            errors,\n            setValues,\n            handleChange,\n            handleSubmit,\n        } = useForm(login, validate);\n\n        function login() {\n            console.log('No errors, submit callback called!');\n        }\n        // const question = userQuestions(values.email, values.password);\n\n    return (\n        <form onSubmit={handleSubmit} noValidate>\n            <TextBox\n                question={question.email}\n                onChange={handleChange}/>\n           <br/>\n\n            <TextBox question={question.password} onChange={handleChange}/>\n\n            {/*<input type=\"email\" name={question.email.key} onChange={handleChange} value={question.email.value || ''} />\n            <input type=\"text\" name=\"name\" onChange={handleChange} value={values.name || ''} />*/}\n            {errors.email && (\n                <p className=\"help is-danger\">{errors.email}</p>\n            )}\n            <button type=\"submit\">Submit</button>\n        </form>\n\n        );\n}\n\n\nexport default App;\nexport function formQuestions(label: string, value?: string) {\n    return {label: label, value: value}\n}\n"]},"metadata":{},"sourceType":"module"}