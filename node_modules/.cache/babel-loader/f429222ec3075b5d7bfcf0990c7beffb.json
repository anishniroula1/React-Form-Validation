{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useForm = validate => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); // This is for Future if needed do not remove\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      const x = 0;\n    }\n  }, [errors]);\n  let formError;\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n\n    if (Object.keys(errors).length === 0) {\n      setErrors(validate(values));\n      formError = true;\n      console.log(formError);\n    }\n\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    setErrors,\n    formError\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/useForm.js"],"names":["useState","useEffect","useForm","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","x","formError","handleSubmit","event","preventDefault","console","log","handleChange","persist","target","name","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD,CAJ0B,CAM1B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AAClD,YAAMK,CAAC,GAAG,CAAV;AACH;AACJ,GAJQ,EAIN,CAACP,MAAD,CAJM,CAAT;AAMA,MAAIQ,SAAJ;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;;AACX,QAAGP,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAAlC,EAAqC;AACjCL,MAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAU,MAAAA,SAAS,GAAG,IAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH;;AACDL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GARD;;AAUA,QAAMW,YAAY,GAAIJ,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACK,OAAN;AACAhB,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACY,KAAK,CAACM,MAAN,CAAaC,IAAd,GAAqBP,KAAK,CAACM,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACH,GAHD;;AAKA,SAAO;AACHJ,IAAAA,YADG;AAEHL,IAAAA,YAFG;AAGHX,IAAAA,MAHG;AAIHE,IAAAA,MAJG;AAKHC,IAAAA,SALG;AAMHO,IAAAA;AANG,GAAP;AAQH,CAtCD;;AAwCA,eAAeZ,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (validate) => {\n\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    // This is for Future if needed do not remove\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            const x = 0;\n        }\n    }, [errors]);\n\n    let formError;\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        if(Object.keys(errors).length === 0) {\n            setErrors(validate(values));\n            formError = true;\n            console.log(formError)\n        }\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        setErrors,\n        formError\n    }\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}