{"ast":null,"code":"var _jsxFileName = \"/Users/anishniroula/Documents/todo/src/core/textbox.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from \"../library/Validator\";\n\nconst TextBox = ({\n  question,\n  onChange\n}) => {\n  const [error, setError] = useState(false);\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    onChange(value);\n  };\n\n  const handleBlur = event => {\n    const {\n      value\n    } = event.target;\n    const requiredValidators = !!question.required && [{\n      check: question.required.validator,\n      message: question.required.message\n    }];\n    setError(validateInput(requiredValidators, value));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, question.label && /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"app-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 32\n    }\n  }, question.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: question.key,\n    type: !question.type ? 'text' : question.type,\n    value: question.value,\n    onChange: onChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), error && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, error.message));\n};\n/*TextBox.propTypes = {\n    value: PropTypes.string || PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n};*/\n\n\nTextBox.defaultProps = {\n  value: ''\n};\nexport default TextBox;","map":{"version":3,"sources":["/Users/anishniroula/Documents/todo/src/core/textbox.js"],"names":["React","useState","PropTypes","validateInput","TextBox","question","onChange","error","setError","handleChange","event","value","target","handleBlur","requiredValidators","required","check","validator","message","label","key","type","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0B;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAACC,MAAAA;AAAD,QAAUD,KAAK,CAACE,MAAtB;AACAN,IAAAA,QAAQ,CAACK,KAAD,CAAR;AACH,GAHD;;AAKA,QAAME,UAAU,GAAIH,KAAD,IAAW;AAC1B,UAAM;AAACC,MAAAA;AAAD,QAAUD,KAAK,CAACE,MAAtB;AACA,UAAME,kBAAkB,GAAG,CAAC,CAACT,QAAQ,CAACU,QAAX,IAAuB,CAC9C;AAACC,MAAAA,KAAK,EAAEX,QAAQ,CAACU,QAAT,CAAkBE,SAA1B;AAAqCC,MAAAA,OAAO,EAAEb,QAAQ,CAACU,QAAT,CAAkBG;AAAhE,KAD8C,CAAlD;AAGAV,IAAAA,QAAQ,CAACL,aAAa,CAACW,kBAAD,EAAqBH,KAArB,CAAd,CAAR;AACH,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QAAQ,CAACc,KAAT,iBAAkB;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCd,QAAQ,CAACc,KAA3C,CADvB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AACI,IAAA,IAAI,EAAEd,QAAQ,CAACe,GADnB;AAEI,IAAA,IAAI,EAAE,CAACf,QAAQ,CAACgB,IAAV,GAAiB,MAAjB,GAA0BhB,QAAQ,CAACgB,IAF7C;AAGI,IAAA,KAAK,EAAEhB,QAAQ,CAACM,KAHpB;AAII,IAAA,QAAQ,EAAEL,QAJd;AAKI,IAAA,MAAM,EAAEO,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,EAUKN,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACW,OAAb,CAVd,CADJ;AAcH,CA7BD;AA+BA;;;;;;AAKAd,OAAO,CAACkB,YAAR,GAAuB;AACnBX,EAAAA,KAAK,EAAE;AADY,CAAvB;AAIA,eAAeP,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {validateInput} from \"../library/Validator\";\n\nconst TextBox = ({question, onChange}) => {\n    const [error, setError] = useState(false);\n    const handleChange = (event) => {\n        const {value} = event.target;\n        onChange(value);\n    };\n\n    const handleBlur = (event) => {\n        const {value} = event.target;\n        const requiredValidators = !!question.required && [\n            {check: question.required.validator, message: question.required.message}\n        ];\n        setError(validateInput(requiredValidators, value));\n    };\n\n    return (\n        <div>\n            {question.label && <label htmlFor=\"app-input-field\">{question.label}</label>}\n            <br/>\n            <input\n                name={question.key}\n                type={!question.type ? 'text' : question.type}\n                value={question.value}\n                onChange={onChange}\n                onBlur={handleBlur}\n            /><br/>\n            {error && <span>{error.message}</span>}\n        </div>\n    )\n};\n\n/*TextBox.propTypes = {\n    value: PropTypes.string || PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n};*/\n\nTextBox.defaultProps = {\n    value: '',\n};\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}